(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{192:function(e,t,s){"use strict";s.r(t);var i=s(0),a=Object(i.a)({},function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"file-parsing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#file-parsing","aria-hidden":"true"}},[e._v("#")]),e._v(" File parsing")]),e._v(" "),s("p",[e._v("Here is the process for parsing a file. For now, only _.js and _.ts files are supported.")]),e._v(" "),s("p",[e._v("With have to think about statements and not directly files. A file can have multiple classes declarated.")]),e._v(" "),s("p",[e._v("Simple reflection about a file with a single class :")]),e._v(" "),s("ul",[s("li",[s("p",[e._v("get the class node with TSQuery")])]),e._v(" "),s("li",[s("p",[e._v("manage all the statements of this class : properties, methods, constructor")])]),e._v(" "),s("li",[s("p",[e._v("find first external relations of this class with properties types (works only for TypeScript). Others relations will be found using bodies of methods (for Javascript for example).")])]),e._v(" "),s("li",[s("p",[e._v("find internal relations of this class using bodies of methods")])]),e._v(" "),s("li",[s("p",[e._v("store all these informations inside a main registry")])])])])},[],!1,null,null,null);t.default=a.exports}}]);