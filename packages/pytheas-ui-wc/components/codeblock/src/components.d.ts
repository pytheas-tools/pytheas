/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
    namespace JSX {
        interface Element {}
        export interface IntrinsicElements {}
    }
    namespace JSXElements {

    }

    interface HTMLElement {
        componentOnReady?: () => Promise<this | null>;
    }

    interface HTMLStencilElement extends HTMLElement {
        componentOnReady(): Promise<this>;

        forceUpdate(): void;
    }

    interface HTMLAttributes {}
}

declare global {
    namespace StencilComponents {
        interface CodeBlock {
            first: string;
            last: string;
        }
    }

    interface HTMLCodeBlockElement
        extends StencilComponents.CodeBlock,
            HTMLStencilElement {}

    var HTMLCodeBlockElement: {
        prototype: HTMLCodeBlockElement;
        new (): HTMLCodeBlockElement;
    };
    interface HTMLElementTagNameMap {
        'my-component': HTMLCodeBlockElement;
    }
    interface ElementTagNameMap {
        'my-component': HTMLCodeBlockElement;
    }
    namespace JSX {
        interface IntrinsicElements {
            'my-component': JSXElements.CodeBlockAttributes;
        }
    }
    namespace JSXElements {
        export interface CodeBlockAttributes extends HTMLAttributes {
            first?: string;
            last?: string;
        }
    }
}

declare global {
    namespace JSX { interface StencilJSX {} }
}

export declare function defineCustomElements(window: any): void;
